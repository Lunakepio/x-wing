/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./tie.glb --shadows --transform --format 
Files: ./tie.glb [141.94KB] > /Users/lunakepio/x-wing/public/tie-transformed.glb [24.61KB] (83%)
Author: metalmorag (https://sketchfab.com/metalmorag)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tie-5bcaa60ed5ce4a51b4233aed418f2280
Title: TIE
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { eventBus } from "./EventBus";

export function Tie(props) {
  const { nodes, materials } = useGLTF('/tie-transformed.glb')
  const meshRef = useRef();

  useFrame(({clock}) => {
    if(!meshRef.current) return
    meshRef.current.position.y = Math.sin(clock.getElapsedTime()) * 0.2

  })

  useEffect(() => {
    eventBus.on("explosion", (pos) => {
      meshRef.current.position.set(99, 99, 99)
    })
  })
  return (
    <group position={[0, -2, 25]} {...props} dispose={null}>
      <mesh name='tie' ref={meshRef} scale={0.15} castShadow receiveShadow geometry={nodes.Object_2.geometry} material={materials.surfaceShader1SG} rotation={[-Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/tie-transformed.glb')
